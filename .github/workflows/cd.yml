# workflowÏùò Ïù¥Î¶Ñ
name: CD

# Ïã§Ìñâ Ìä∏Î¶¨Í±∞ (Push, ÏàòÎèô Ïã§Ìñâ Í∞ÄÎä•)
on:
  push:
    branches: [ main ] # main branchÎ°ú push Îê† Îïå Ïã§ÌñâÎê©ÎãàÎã§.
  workflow_dispatch:  # üëà ÏàòÎèô Ïã§Ìñâ Ìä∏Î¶¨Í±∞ Ï∂îÍ∞Ä

# Ìï¥Îãπ yml ÎÇ¥ÏóêÏÑú ÏÇ¨Ïö©Ìï† key - value
env:
  NCP_BUCKET_NAME: bungmakase-bucket
  PROJECT_NAME: bungmakase
  NCP_REGION: kr-standard
  NCP_ENDPOINT: https://kr.object.ncloudstorage.com  # NCP Object Storage ÏóîÎìúÌè¨Ïù∏Ìä∏

jobs:
  build:
    name: CD
    runs-on: ubuntu-latest

    steps:
      # ÏûëÏóÖÏóêÏÑú Ïï°ÏÑ∏Ïä§Ìï† Ïàò ÏûàÎèÑÎ°ù $GITHUB_WORKSPACEÏóêÏÑú Ï†ÄÏû•ÏÜåÎ•º Ï≤¥ÌÅ¨ÏïÑÏõÉÌï©ÎãàÎã§.
      - uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      # ‚úÖ NCP Object Storage ÏÑ§Ï†ï
      - name: Install s3cmd
        run: sudo apt-get install -y s3cmd
        shell: bash

      - name: Configure NCP credentials
        run: |
          echo "[default]" > ~/.s3cfg
          echo "access_key = ${{ secrets.NCP_ACCESS_KEY_ID }}" >> ~/.s3cfg
          echo "secret_key = ${{ secrets.NCP_SECRET_ACCESS_KEY }}" >> ~/.s3cfg
          echo "host_base = $NCP_ENDPOINT" >> ~/.s3cfg
          echo "host_bucket = $NCP_ENDPOINT" >> ~/.s3cfg
        shell: bash

      - name: Rename ZIP file
        run: mv ./$GITHUB_SHA.zip ./latest.zip
        shell: bash

      - name: Upload to NCP S3 (Always latest.zip)
        run: s3cmd put ./latest.zip s3://$NCP_BUCKET_NAME/$PROJECT_NAME/latest.zip --host=$NCP_ENDPOINT
        shell: bash

      # ÏÜåÏä§Ïª§Î∞ã Ìë∏Ïãú
      - name: Debug Secrets (ÌôïÏù∏Ïö©)
        run: |
          echo "Repo URL: ${{ secrets.NCP_SOURCECOMMIT_REPO_URL }}"
          echo "Username: ${{ secrets.NCP_SOURCECOMMIT_USERNAME }}"
          echo "Password Length: ${#secrets.NCP_SOURCECOMMIT_PASSWORD}"

      - name: Configure Git
        run: |
          git config --global user.name "jdoeun"
          git config --global user.email "jde429@khu.ac.kr"

      - name: Add SourceCommit remote
        run: |
          git remote remove sourcecommit || true  # Í∏∞Ï°¥ remote ÏÇ≠Ï†ú (ÏóÜÏñ¥ÎèÑ Ïò§Î•ò Î¨¥Ïãú)
          git remote add sourcecommit https://${{ secrets.NCP_SOURCECOMMIT_USERNAME }}:${{ secrets.NCP_SOURCECOMMIT_PASSWORD }}@devtools.ncloud.com/3464490/bungmakase.git

      - name: Ensure branch exists on SourceCommit
        run: |
          if ! git ls-remote --exit-code sourcecommit main; then
            git push sourcecommit main
          fi

      - name: Push changes to SourceCommit
        run: |
          git push --force sourcecommit main
